const express = require('express');
const axios = require('axios');

const app = express();
const PORT = 3000;

// Middleware para que acepte JSON en el body
app.use(express.json());

// 🚨 CONFIGURA ESTO
const NOTION_TOKEN = 'TU_TOKEN_SECRETO_DE_NOTION';
const DATABASE_ID = 'TU_ID_DE_BASE_DE_DATOS';

// 🔧 Utilidad para obtener la fecha de hace 14 días
function getCutoffDate() {
  const date = new Date();
  date.setDate(date.getDate() - 14);
  return date.toISOString();
}

// 📩 Ruta para recibir tareas desde tu formulario
app.post('/webhook', async (req, res) => {
  const data = req.body;
  console.log('📥 Recibido desde el formulario:', data);

  try {
    // Enviar los datos a Notion
    const response = await axios.post(
      'https://api.notion.com/v1/pages',
      {
        parent: { database_id: DATABASE_ID },
        properties: {
          Tarea: {
            title: data.Tarea
          },
          Estado: {
            status: data.Estado
          },
          Prioridad: {
            select: data.Prioridad
          },
          Área: {
            select: data.Área
          },
          'Fecha de vencimiento': {
            date: data['Fecha de vencimiento']
          }
        }
      },
      {
        headers: {
          Authorization: `Bearer ${NOTION_TOKEN}`,
          'Notion-Version': '2022-06-28',
          'Content-Type': 'application/json'
        }
      }
    );

    res.send('✅ Tarea recibida y guardada en Notion.');
  } catch (error) {
    console.error('❌ Error al enviar a Notion:', error.response?.data || error.message);
    res.status(500).send('⚠️ Error al enviar tarea a Notion.');
  }
});

// 🧹 Ruta para eliminar tareas con status "Done" hace +14 días
app.get('/cleanup', async (req, res) => {
  const cutoffDate = getCutoffDate();

  try {
    const response = await axios.post(
      `https://api.notion.com/v1/databases/${DATABASE_ID}/query`,
      {
        filter: {
          and: [
            {
              property: 'Status',
              select: { equals: 'Done' }
            },
            {
              property: 'Fecha de completado',
              date: { before: cutoffDate }
            }
          ]
        }
      },
      {
        headers: {
          Authorization: `Bearer ${NOTION_TOKEN}`,
          'Notion-Version': '2022-06-28',
          'Content-Type': 'application/json'
        }
      }
    );

    const pages = response.data.results;
    console.log(`🧹 ${pages.length} tareas encontradas para archivar`);

    for (const page of pages) {
      await axios.patch(
        `https://api.notion.com/v1/pages/${page.id}`,
        { archived: true },
        {
          headers: {
            Authorization: `Bearer ${NOTION_TOKEN}`,
            'Notion-Version': '2022-06-28',
            'Content-Type': 'application/json'
          }
        }
      );
      console.log(`✅ Página archivada: ${page.id}`);
    }

    res.send(`🗑️ ${pages.length} tareas archivadas correctamente.`);
  } catch (err) {
    console.error('❌ Error en limpieza:', err.response?.data || err.message);
    res.status(500).send('⚠️ Error al limpiar tareas.');
  }
});

// 🚀 Levantar el servidor
app.listen(PORT, () => {
  console.log(`🌐 BetsyBot corriendo en http://localhost:${PORT}`);
});
